{"ast":null,"code":"var _jsxFileName = \"/Users/a/Documents/songlistapp/spp/src/components/MovieDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovie } from '../actions';\nimport { Card, CardText, Row, Col } from 'reactstrap';\n\nclass MovieDetails extends Component {\n  componentDidMount() {\n    this.props.fetchMovie(this.props.match.params.id);\n  }\n\n  render() {\n    const {\n      title,\n      poster_path,\n      overview,\n      tagline,\n      release_date,\n      production_companies,\n      production_countries\n    } = this.props.movies;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"search_result_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, title), React.createElement(Row, {\n      xs: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"search_image img-fluid\",\n      src: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, release_date), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, overview), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, release_date), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Production Companies\"), production_companies && production_companies.map(m => React.createElement(\"div\", {\n      key: m.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, m.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Production Countries\"), production_countries && production_countries.map(m => React.createElement(\"div\", {\n      key: m.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, m.name)))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  movies: state.trending.movieDetails\n});\n\nexport default connect(mapStateToProps, {\n  fetchMovie\n})(MovieDetails);","map":{"version":3,"sources":["/Users/a/Documents/songlistapp/spp/src/components/MovieDetails.js"],"names":["React","Component","connect","fetchMovie","Card","CardText","Row","Col","MovieDetails","componentDidMount","props","match","params","id","render","title","poster_path","overview","tagline","release_date","production_companies","production_countries","movies","map","m","name","mapStateToProps","state","trending","movieDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,GAA9B,QAAwC,YAAxC;;AACA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACjCQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,WAAR;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA,OAA/B;AAAwCC,MAAAA,YAAxC;AAAsDC,MAAAA,oBAAtD;AAA4EC,MAAAA;AAA5E,QAAoG,KAAKX,KAAL,CAAWY,MAArH;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CP,KAA1C,CADJ,EAGI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AACpB,MAAA,SAAS,EAAC,wBADU;AAEpB,MAAA,GAAG,EAAG,kCAAiCC,WAAY,EAF/B;AAGpB,MAAA,GAAG,EAAC,EAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CAAN,CADJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWG,YAAX,CADA,EAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,QAAX,CAFA,EAGA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWE,YAAX,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMC,oBAAoB,IAAIA,oBAAoB,CAACG,GAArB,CAAyBC,CAAC,IAAG;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,CAAC,CAACC,IAAtB,CAA7B,CAF9B,CAJA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMJ,oBAAoB,IAAIA,oBAAoB,CAACE,GAArB,CAAyBC,CAAC,IAAG;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,CAAC,CAACC,IAAtB,CAA7B,CAF9B,CATA,CAPJ,CAHJ,CAFJ,CADJ;AAkCH;;AAxCgC;;AA0CrC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,MAAM,EAAEK,KAAK,CAACC,QAAN,CAAeC;AADS,CAAL,CAA7B;;AAGA,eAAe3B,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAAwCK,YAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {fetchMovie} from '../actions'\nimport { Card, CardText, Row, Col} from 'reactstrap';\nclass MovieDetails extends Component {\n    componentDidMount(){\n        this.props.fetchMovie(this.props.match.params.id);\n    }\n    render() {\n        const {title, poster_path, overview, tagline ,release_date, production_companies, production_countries} = this.props.movies\n        return (\n            <div className='container'>\n                \n                <Card body>\n                    <h5 className=\"search_result_card_title\">{title}</h5>\n                    \n                    <Row xs=\"2\" >\n                        <Col> <span><img\n                className=\"search_image img-fluid\"\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"\"\n                /></span>\n                        </Col>\n                        <Col>\n                        <CardText>{release_date}</CardText>\n                        <CardText>{overview}</CardText> \n                        <CardText>{release_date}</CardText> \n                        <div>\n                            <h6>Production Companies</h6>\n                            { production_companies && production_companies.map(m=>(<div key={m.name}>{ m.name}</div>\n                        ))}\n                        </div>\n                        <div>\n                            <h6>Production Countries</h6>\n                            { production_countries && production_countries.map(m=>(<div key={m.name}>{ m.name}</div>\n                        ))}\n                        </div>\n                        </Col>\n                    </Row>\n                    \n                   \n                </Card>\n            </div>\n        );\n    };\n}\nconst mapStateToProps = state => ({\n  movies: state.trending.movieDetails\n});\nexport default connect(mapStateToProps, { fetchMovie})(MovieDetails);\n"]},"metadata":{},"sourceType":"module"}