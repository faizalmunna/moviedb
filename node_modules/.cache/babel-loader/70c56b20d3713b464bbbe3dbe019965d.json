{"ast":null,"code":"var _jsxFileName = \"/Users/a/Documents/songlistapp/spp/src/components/ActorDetail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPerson } from '../actions';\nimport { Row, Col } from 'reactstrap';\nimport './MovieDetails.scss';\n\nclass ActorDetail extends Component {\n  componentDidMount() {\n    this.props.fetchPerson(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props.actor);\n    const {\n      name,\n      biography\n    } = this.props.actor;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"movie_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, name), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"search_image img-fluid\",\n      src: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, tagline)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, biography), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Genres\"), genres && genres.map(m => React.createElement(\"div\", {\n      key: m.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, m.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Production Companies\"), production_companies && production_companies.map(m => React.createElement(\"div\", {\n      key: m.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, m.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Production Countries\"), production_countries && production_countries.map(m => React.createElement(\"div\", {\n      key: m.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, m.name))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  actor: state.search.actorDetails\n});\n\nexport default connect(mapStateToProps, {\n  fetchPerson\n})(ActorDetail);","map":{"version":3,"sources":["/Users/a/Documents/songlistapp/spp/src/components/ActorDetail.js"],"names":["React","Component","connect","fetchPerson","Row","Col","ActorDetail","componentDidMount","props","match","params","id","render","console","log","actor","name","biography","poster_path","tagline","genres","map","m","production_companies","production_countries","mapStateToProps","state","search","actorDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,SAAQC,GAAR,EAAcC,GAAd,QAAwB,YAAxB;AACA,OAAO,qBAAP;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAChCM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,KAAvB;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAoB,KAAKT,KAAL,CAAWO,KAArC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,IAAlC,CADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,SAAS,EAAC,wBADV;AAEA,MAAA,GAAG,EAAG,kCAAiCE,WAAY,EAFnD;AAGA,MAAA,GAAG,EAAC,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,CAJJ,EAaQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CAAN,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,SAAP,CAFA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEMG,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAWC,CAAC,IAAG;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACN,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBM,CAAC,CAACN,IAAtB,CAAf,CAFhB,CANA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMO,oBAAoB,IAAIA,oBAAoB,CAACF,GAArB,CAAyBC,CAAC,IAAG;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACN,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBM,CAAC,CAACN,IAAtB,CAA7B,CAF9B,CAXA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMQ,oBAAoB,IAAIA,oBAAoB,CAACH,GAArB,CAAyBC,CAAC,IAAG;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACN,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBM,CAAC,CAACN,IAAtB,CAA7B,CAF9B,CAhBA,CAbR,CADJ,CADJ;AAwCH;;AA/C+B;;AAiDpC,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC;AADY,CAAL,CAA7B;;AAGA,eAAe1B,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAAwCG,WAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {fetchPerson} from '../actions'\nimport {Row , Col} from 'reactstrap';\nimport './MovieDetails.scss'\nclass ActorDetail extends Component {\n    componentDidMount(){\n        this.props.fetchPerson(this.props.match.params.id);\n    }\n    render() {\n        console.log(this.props.actor)\n        const {name, biography} = this.props.actor\n        return (\n            <div className='container'>\n                <div className='movie_details'>\n                    <h2 className=\"movie_card_title\">{name}</h2>  \n                    <Row>\n                </Row>       \n                    <Col>\n                            <span>\n                                <img\n                                className=\"search_image img-fluid\"\n                                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                                alt=\"\"\n                                />\n                            </span>\n                        </Col>\n                        <Col>\n                        <span><h5>{tagline}</h5></span>\n                        <span>{biography}</span> \n                        {/* <span><h6>release  date</h6> {release_date}</span> \n                        <span><h6>vote average</h6> {vote_average}</span>\n                        <span><h6>vote count</h6>  {vote_count}</span> */}\n                        <div>\n                            <h6>Genres</h6>\n                            { genres && genres.map(m=>(<div key={m.name}>{ m.name}</div>\n                        ))}\n                        </div>\n                        <div>\n                            <h6>Production Companies</h6>\n                            { production_companies && production_companies.map(m=>(<div key={m.name}>{ m.name}</div>\n                        ))}\n                        </div>\n                        <div>\n                            <h6>Production Countries</h6>\n                            { production_countries && production_countries.map(m=>(<div key={m.name}>{ m.name}</div>\n                        ))}\n                        </div>\n                        </Col>\n                </div>\n            </div>\n        );\n    };\n}\nconst mapStateToProps = state => ({\n  actor: state.search.actorDetails\n});\nexport default connect(mapStateToProps, {fetchPerson})(ActorDetail);\n"]},"metadata":{},"sourceType":"module"}